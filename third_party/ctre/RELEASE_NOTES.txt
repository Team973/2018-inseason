Phoenix Framework 5.2.1 Installer (Jan 11 2018):
	Class Libraries (FRC C++ 2018_v12/
			 FRC Java 2018_v15/
			 FRC LabVIEW 2018_v13/
			 FRC CCI 2018_v12): Individual Trajectory Point timeDur options changed.
						0ms is now an option.  15ms is no longer an option.
	Talon SRX/Victor SPX Firmware (3.3): Changed to accomodate new Trajectory Point timeDur options.
Phoenix Framework 5.2.0 Installer (Jan 10 2018):
	Class Libraries (FRC C++ 2018_v11/
			 FRC Java 2018_v14/
			 FRC LabVIEW 2018_v12): Motion Profiling support added.
					      : Added getClosedLoopTarget
	Class Library (FRC CCI 2018_v12): Added motion profiling support.
	Class Library (FRC CCI 2018_v12): Fixed issue when setting deadband where value was doubled.
	Class Library (FRC Java 2018_v14): Fixed issue where getStickyFaults was returning normal Faults.
	Class Library (FRC LabVIEW 2018_v12): Fixed issue where getGeneralStatus caused code crash.
	Talon SRX/Victor SPX Firmware (3.2): Motion Profiling now usable.
Phoenix Framework 5.1.3 Installer (Jan 04 2018):
	Class Libraries (FRC C++ 2018_v10/Java 2018_v13): Updated Documentation
	Class Libraries (FRC C++ 2018_v10/Java 2018_v13): Removed Framework (Drive/Mechanical/Motion) classes from library to prevent confusion.
					      These will be re-added in a mid-season update.
	Class Library (FRC LabVIEW 2018_v11): Removed Framework (Drive/Mechanical/Motion) VIs from the installation to prevent confusion.  
					      These will be re-added in a mid-season update.
	Class Library (FRC LabVIEW 2018_v11): Fixed CANifier GetPWMInput VI.
	Class Library (FRC LabVIEW 2018_v11): Current Control Mode set changed from milliAmps to Amps to match C++/Java and examples.
Phoenix Framework 5.1.2 Installer (Jan 04 2018):
	Class Library (FRC Java 2018_v12): Fixed issue where getInverted/setInverted in WPI_TalonSRX/VictorSPX were recursing.
Phoenix Framework 5.1.1 Installer (Jan 04 2018)
	Installer (Phoenix Framework 5.1.1.0): RobotBuilder files are now properly removed when uninstaller is run.
	Installer (Phoenix Framework 5.1.1.0): Fixed RobotBuilder include for Victor SPX.
	Class Library (FRC LabVIEW 2018_v10): Device ID inputs are now required for Open VIs.
Phoenix Framework 5.1.0 Installer (Jan 04 2018)
	Installer (Phoenix Framework 5.1.0.0): Now installs a LabVIEW example findable with the LabVIEW example finder.
	Lifeboat (v0.9.10.0): Updated FRC roboRIO page.
	Class Library (FRC CCI 2018_v11): New feature specific error messages.
	Class Library (FRC C++ 2018_v9): Pigeon getFusedHeading now properly returns Fused Heading.
	Class Library (FRC Java 2018_v11): Pigeon getFusedHeading(FusionStatus) now null checks the FusionStatus object.
	Class Library (FRC Java 2018_v11): setControl/StatusFramePeriod methods now support int arguments.
	Class Library (FRC Java 2018_v11): Added CANTalon wrapper for TalonSRX. 
					   It is deprecated and should not be used - it is present to help bridge users over to TalonSRX.
	Class Libraries (FRC C++ 2018_v9/Java 2018_v11): getWPISpeedController() has been removed.
			Instead, new classes (WPI_TalonSRX and WPI_VictorSPX) have been added.
			These classes extend their non-"WPI_" counterparts and also implement
				SpeedController, Sendable, and MotorSafety from WPILib.
			Phoenix RobotBuilder files have been updated to reflect this.
	Class Library (FRC LabVIEW 2018_v9): CANifier/Pigeon at parity with C++/Java.
	Class Library (FRC LabVIEW 2018_v9): Added VI to set the duration of motion trajectory points.
	Class Library (FRC LabVIEW 2018_v9): Fixed spelling errors.
	Class Library (FRC LabVIEW 2018_v9): If library call node in Open VIs report file-not-found, user is given an error message to install Phoenix.
	libfrccanfirmwareupdate.so (2018_1_1): Now supports CANifier, Victor SPX, and new Talon SRX features.
	Talon SRX/Victor SPX Firmware (2.129): Tachometer signal supported
	Talon SRX/Victor SPX Firmware (2.130): Motor output percent reported as zero when within deadband.
	Talon SRX/Victor SPX Firmware (3.1): Firmware build for Kickoff.  This is the official minimum version for 2018.
Phoenix Framework 5.0.9 Installer (Dec 29 2017)
	Class Library (FRC C++ 2018_Beta_v8): Adds Sendable/LiveWindow to WPILibSpeedController.
	Class Library (FRC C++ 2018_Beta_v8): Removed single-parameter set().  This was a placeholder pre-WPILibSpeedController.
	Class Library (FRC Java 2018_Beta_v10): Adds Sendable/LiveWindow to WPILibSpeedController.
	Class Library (FRC Java 2018_Beta_v10): Removed single-parameter set().  This was a placeholder pre-WPILibSpeedController.
	Class Library (FRC Java 2018_Beta_v10): Fixed ConfigSelectedFeedbackSensor.
	Class Library (FRC LabVIEW 2018_Beta_v8): Fixed Motor Control Set VI.  Non-PercentOutput setpoints are no longer improperly coerced to (-1,1).
Phoenix Framework 5.0.8 Installer (Dec 27 2017)
	Installer (Phoenix Framework 5.0.8.0): Updates RobotBuilder files for TalonSRX, VictorSPX, PigeonIMU, and CANifier
	Class Library (FRC CCI 2018_Beta_v9): Phoenix will now report to DS when firmware is too old.
	Class Library (FRC CCI 2018_Beta_v9): Low-level support for remote limit switches added.
	Class Library (FRC CCI 2018_Beta_v9): DS messages now sent appropriately for all languages.
	Class Library (FRC CCI 2018_Beta_v9): Fixed issue that could cause roboRIO LabVIEW runtime to crash when deploying/running a LabVIEW project.
	Class Library (FRC CCI 2018_Beta_v9): ctre.h removed
	Class Library (FRC C++ 2018_Beta_v7): Added setStatus/Control Frame period for CANifier.
	Class Library (FRC C++ 2018_Beta_v7): Added remote limit switch API.
	Class Library (FRC C++ 2018_Beta_v7): Adds TalonSRX sensor collection getters (quadrature, pulse-width, etc.)
	Class Library (FRC Java 2018_Beta_v9): Added setStatus/Control Frame period for CANifier.
	Class Library (FRC Java 2018_Beta_v9): Added remote limit switch API.
	Class Library (FRC Java 2018_Beta_v9): Adds TalonSRX sensor collection getters (quadrature, pulse-width, etc.)
	Class Library (FRC LabVIEW 2018_Beta_v7): Updated to match latest C++/Java
	Class Library (FRC LabVIEW 2018_Beta_v7): Fixed issue where control frame for motor controller would sometimes not be sent until Set was called.
	Class Library (FRC LabVIEW 2018_Beta_v7): Added remote limit switch API.
	Class Library (FRC LabVIEW 2018_Beta_v7): Enable and config for soft limits separated into two VIs.
	Class Library (FRC LabVIEW 2018_Beta_v7): Error numbers should no longer conflict with standard LabVIEW error numbers.
	Class Library (FRC LabVIEW 2018_Beta_v7): Adds TalonSRX sensor collection getters (quadrature, pulse-width, etc.)
	Talon SRX Firmware (2.128): New current limiting features now supported.
	Talon SRX/Victor SPX Firmware (2.128): New Voltage Compensation feature now supported
	Talon SRX/Victor SPX Firmware (2.128): Now supports remote limit switches
	Talon SRX/Victor SPX Firmware (2.128): Soft Limit override now works.
	Talon SRX/Victor SPX Firmware (2.128): Fixes configPeakOutputForward/Reverse to work in open-loop modes.
	CANifier Firmware (0.40): Now supports remote limit switches/remote sensors
	Pigeon IMU Firmware (0.41): Now supports remote sensors
Phoenix Framework 5.0.7 Installer (Dec 15 2017)
	Class Library (FRC CCI 2018_Beta_v8): Fixes thread closing implementation that prevented subsequent LabVIEW code deploys.
Phoenix Framework 5.0.6 Installer (Dec 08 2017)
	Lifeboat (v0.9.9.9): Fixes Rio upgrade process for Beta 4.
	Installer (Phoenix Framework 5.0.6.0): Fixes issue where LabVIEW menu files overwrote third party palette menus.
	Class Library (FRC CCI 2018_Beta_v7): Enabled reporting to driver station for Java.
	Class Library (FRC C++ 2018_Beta_v6): Added Victor SPX.
	Class Library (FRC C++ 2018_Beta_v6): Added Sequential Scheduler.
	Class Library (FRC Java 2018_Beta_v8): Added Victor SPX.
	Class Library (FRC Java 2018_Beta_v8): Enabled error reporting to driver station.
	Class Library (FRC LabVIEW 2018_Beta_v6): Added Victor SPX.
	Class Library (FRC LabVIEW 2018_Beta_v6): Fixed config reverse limit short name in palette.
	Class Library (FRC LabVIEW 2018_Beta_v6): Voltage compensation enable is now  separate from config.
	Class Library (FRC LabVIEW 2018_Beta_v6): Soft limit enable is now separate from config.
	Class Library (FRC LabVIEW 2018_Beta_v6): Closed-loop data (closed-loop error, derivative, and iaccum) and set iaccum now take optional pidLoopIdx parameter.
	Class Library (FRC LabVIEW 2018_Beta_v6): Fixed missing input terminal on a few VIs.
	Class Library (FRC LabVIEW 2018_Beta_v6): Subpalette icons updated.
	libfrccanfirmwareupdate.so (2017_12_7): Fixed to work with Beta 4.
Phoenix Framework 5.0.5 Installer (Nov 30 2017)
	Lifeboat (v0.9.9.6): wpiutil removed.
	Lifeboat (v0.9.9.6): User is prompted after updating RIO web plugin and library.
	Installer (Phoenix Framework 5.0.5.0): LabVIEW files now placed in Install Directory instead of LV directory.  
						Menu files are placed in LV directory.
	Class Library (FRC CCI 2018_Beta_v6): Changed to use new Talon SRX firmware and CAN framing.
	Class Library (FRC CCI 2018_Beta_v6): CCI changed to use generic MotController C functions instead of TalonSRX.
	Class Library (FRC C++ 2018_Beta_v5): Added BaseMotorController, which uses new CCI functions.
	Class Library (FRC Java 2018_Beta_v6):  Added BaseMotorController, which uses new CCI functions.
	Class Library (FRC Java 2018_Beta_v7:  User facing java functions are lowerCamelCase.
	Class Library (FRC LabVIEW 2018_Beta_v5): TalonSRX VIs have been redone.  They now use the new CCI and beta Talon firmware.
	Class Library (HERO SDK CTRE.dll 4.4.0.29): Fixes to EEPROM class.
	Class Library (HERO SDK CTRE.dll 4.4.0.29): NeutralMode Enum for motor controllers fixed.
	libfrccanfirmwareupdate.so (2017_11_19): Robustness improvement when there are many common-ID devices.
	libfrccanfirmwareupdate.so (2017_11_19): Blink LED is used to clear sticky faults.  Self-test documents this.
	libfrccanfirmwareupdate.so (2017_11_19): Added Victor SPX support.
	
	This release contains several new features/concepts.  The following are the most prominent.
		Invert/Reverse strategy has been improved considerably.  There are only two functions: SetInvert(bool) and SetSensorPhase(bool).
			If using closedloop/soft-limit features in a CTRE motor controller, select SetSensorPhase(bool) to ensure positive output yields positive sensor postion.

			User can set SetInvert() to whatever they want.  This invert selection goes to the firmware and affects all control modes.  
			
			When SetInvert(true) is set, the motor controller LEDs will change orientation.  For example, green will represent positive voltage on the M- wire when SetInvert(true).
			This is done to guarantee the following...
			- Green LEDs on Talon/Victor means forward-limit-switch is in effect regardless of Invert selection.
			- Green LEDs on Talon/Victor means forward-soft-limit is in effect regardless of Invert selection.
			- Green LEDs on Talon/Victor means selected output is positive (closed-loop output positive or robot controller set positive motor percent output).
			
			User can change SetInvert() without having to modify the SetSensorPhase() selection.  Once sensor is in phase, you can SetInvert() true or false.
			
		Voltage Control Mode is removed.  This is being replaced with a EnableVoltageCompensation setting that can be enabled/disabled with any control Mode.
		Various CAN frames have been changed and impact the frame divisions in SetStatusFramePeriod.
		WPI Speed Controller compliant objects can be retrieved via GetWPI_SpeedController().
		PigeonImu => PigeonIMU
		SetStatusFrameRate => SetStatusFramePeriod()
		New Follow API/VI so that Victor SPX can follow Talon SRX and vice versa.  The Set() API can still be used to pick the master if the master is the same model as follower.
		Set() is two parameters now.  Caller specifies the control-mode and the set-point/output.  This is far better and produces cleaner robot logic.
		Deadband can be changed.
		Various CAN frame changes for reduced CPU and CAN use.
		Various changes to CAN frames for pending future features (IMU/Differential sensor/casdcaded close loops/etc).
		Two pecent ramps, one for open-loop and one for closed-loop.  This way robot application does not need to switch ramp when changing control mode.
		
	Known Limitations:  
		Robot API: Victor SPX class is not available yet.  This will be added to next release.
		Robot API: Motion Profile not available as it is being reworked to include remote sensor concept and robot heading.
		Robot API: Fault API was not fully tested for this release.
		Robot API: GetLastError() and DS Error reporting does not work under all contexts.  Fixes for this will be merged into next release.
		Robot API: Remote Limit Switches not supported yet (Source:CANifer/Talon SRX).
		Robot API: Remote Sensor selection not supported yet. (Source:CANifer/Talon SRX).
		Robot API: SRX Current limit API not functional yet.  This is being reworked to include peak and continuous thresholds.
		Robot API: Talon/CANifier Tachometer not functional below 4000RPM.  This will be improved in future Talon/CANifier release.  This also means improved pulse width decode.
		Robot API: TimePercent control mode does nothing currently.
		Web-based config: CANifier Self-test is not supported yet.
		Web-based config: CANifier blink LED will report an error, but device will blink correctly.
		ConfigPeakOutputForward/Reverse only impacts closed-loopds.
		
	
Phoenix Framework 5.0.4.4 Installer (Oct 27 2017)
	Lifeboat (v0.9.9.5): wpiutil now copied over as part of roboRIO Upgrade process.  Library will not link in LabVIEW without this.
Phoenix Framework 5.0.4.3 Installer (Oct 27 2017)
	Lifeboat (v0.9.9.4): roboRIO upgrade process now places libfrccanfirmwareupdate.so that has been built for specific rio image (2017 v 2018)
	libfrccanfirmwareupdate.so (2017_27_10): Rebuilt for 2018 image.
Phoenix Framework 5.0.4.2 Installer (Oct 20 2017)
	Installer (Phoenix Framework 5.0.4.2): Places LabVIEW VIs in correct folder.
	Installer (Phoenix Framework 5.0.4.2): Now prevents installation of ANY Hero C# components if VS 2017 is not installed.
	Lifeboat (v0.9.9.3): Fixes issue that would cause LifeBoat to crash on start.
Phoenix Framework 5.0.4.1 Installer (Oct 15 2017)
	Installer (Phoenix Framework 5.0.4.1): Fixes an issue where C++ header files were missing.
Phoenix Framework 5.0.4.0 Installer (Oct 13 2017)
	Installer (Phoenix Framework 5.0.4.0): Releases appended with -FOR_BETA_ONLY have *.so and *.a files compiled 
						using the 2018 FRC gcc toolchain.  All other releases are built using the 2017 toolchain.
	Class Library (FRC CCI 2018_Alpha_v4): Binary name changed to libCTRE_PhoenixCCI
	Class Library (FRC C++ 2018_Alpha_v4): CANifier class added.
	Class Library (FRC C++ 2018_Alpha_v4): Tasking/Scheduler Classes and Utilities added.
	Class Library (FRC C++ 2018_Alpha_v4) AND
	Class Library (FRC Java 2018_Alpha_v5):
				- Namespaces have been restructured. All classes are now in com.ctre.phoenix(Java) or CTRE::Phoenix::(C++) namespace
				- CANTalon renamed to TalonSRX in the MotorControl.CAN namespace.
				- PigeonImu moved to Sensors namespace.
				- Output binaries and jars have been renamed to CTRE_Phoenix*
	Class Library (FRC LabVIEW 2018_Alpha_v4): CANifier VIs added
	Class Library (FRC LabVIEW 2018_Alpha_v4): GetStatus VIs no longer missing
	Class Library (HERO SDK CTRE.dll 4.4.0.28): Namespace restructure similar to Java/C++.  Binaries are still named CTRE.dll
	Lifeboat (v0.9.9.2): Now copies libCTRE_PhoenixCCI.so to roboRIO instead of old shared object.
	KNOWN ISSUES:
		- The Phoenix Logger (and Error Reporting for FRC C++/Java) is temporarily disabled.
		- LiveWindow capability for FRC C++/Java is temporarily unavailable.
Phoenix Toolsuite 5.0.3.3 Installer (Sept 27 2017)
	Class Library (FRC LabVIEW 2018_Alpha_v3): New attempt at repacking VIs, some VIs didn't package in previous build.
Phoenix Toolsuite 5.0.3.2 Installer (Sept 23 2017)
	Class Library (HERO SDK CTRE.dll 4.4.0.27): CANifier class added.
	Class Library (HERO SDK CTRE.dll 4.4.0.27): Copyright date changed to 2017.
	libfrccanfirmwareupdate.so (2017_22_9): Added CANifier to RIO web-based config.
	Lifeboat (v0.9.9.1):  Added CANifier to HERO LifeBoat.
	Lifeboat (v0.9.9.1):  HERO LifeBoat has left pane folder shortcut in CRF browser for firmware files.
	Class Library (FRC CCI 2018_Alpha_v4): Get Motion Profile Active Trajectory Position and Velocity do not support negative values.
	Class Library (FRC Java 2018_Alpha_v4): CANifier classes added.
CTRE Toolsuite 5.0.2.1 Installer (Sept 15 2017)
	Class Library (HERO SDK CTRE.dll 4.4.0.26): Fixed issue where library was built using wrong native dll and couldn't be deployed.
CTRE Toolsuite 5.0.2.0 Installer (Sept 15 2017)
	Installer (CTRE Toolsuite 5.0.2.0): Fixed spelling issue.
	Installer (CTRE Toolsuite 5.0.2.0): FRC CCI version now included in version notes.
	Class Library (HERO SDK CTRE.dll 4.4.0.25): Display Module class now correctly uses given port instead of always using Port 8.
	Class Library (FRC LabVIEW 2018_Alpha_v2): Added Servo Class VIs (including servo execution blocking VI)
	Class Library (FRC LabVIEW 2018_Alpha_v2): Fixed issue where a few Pigeon VIs were not updated to use CCI.
	Class Library (FRC LabVIEW 2018_Alpha_v2): Uses CCI Logger to capture generated errors.
	Class Library (FRC C++ 2018_Alpha_v3): Uses CCI Logger to capture generated errors.
	Class Library (FRC Java 2018_Alpha_v3): Implemented Tasking features
	Class Library (FRC Java 2018_Alpha_v3): Sensored Gearbox GetPosition() now returns in units of Rotations.
	Class Library (FRC Java 2018_Alpha_v3): Removed Unit scaling from SmartMotorController (unit scaling is now done in gearboxes/drivetrain instead of in motor controllers)
	Class Library (FRC Java 2018_Alpha_v3): Updated Servo Params
	Class Library (FRC Java 2018_Alpha_v3): Uses CCI Logger to capture generated errors.
	Class Library (FRC CCI 2018_Alpha_v3): Added Logger to log CTRE data to file and FRC DS.
	Class Library (FRC CCI 2018_Alpha_v3): CCI now checks handle pointers to make sure object exists.
	HERO Firmware (v1.0.1.0): Fixed issue where ~60ms of delay occured in HERO when USB port not occupied.  (Issue #63)
	HERO Examples: Fixed issue where CTRE.dll reference path was incorrect
	HERO Examples: Updated comments to correct minimum SDK version number
	KNOWN ISSUE:	
		CTRE dll was built using wrong native dll and can't be deployed.
CTRE Toolsuite 5.0.1.0 Installer (Aug 11 2017)
	Installer (CTRE Toolsuite 5.0.1.0): Now removes any previous LabVIEW VIs before installing new ones.
	Class Library (HERO SDK CTRE.dll 4.4.0.24): Addition of Phoenix Framework.
	Class Library (HERO SDK CTRE.dll 4.4.0.24): Update to ESP12F Wifi class.
	Class Library (HERO SDK CTRE.dll 4.4.0.24): Examples are now properly installed for VS2017.
	Class Library (HERO SDK CTRE.dll 4.4.0.24): Examples have been updated to reflect Phoenix.
	Class Library (FRC C++ 2018_Alpha_v2): Addition of Motion and Servo classes for Phoenix Framework.
	Class Library (FRC C++ 2018_Alpha_v2): CANTalon is now in MotorControllers package.
	Class Library (FRC Java 2018_Alpha_v2): Addition of Motion and Servo classes for Pheoenix Framework.
	Class Library (FRC Java 2018_Alpha_v2): CANTalon is now in MotorControllers package.
CTRE Toolsuite 5.0.0.2 Installer (Aug 01 2017)
	Installer (CTRE Toolsuite 5.0.0.2): Fixes Issue with VS2017 path detection
	Installer (CTRE Toolsuite 5.0.0.2): Fixes issues where PigeonImu.h was not installed
CTRE Toolsuite 5.0.0.1 Installer
	Installer (CTRE Toolsuite 5.0.0.1): Fixes issue where unneccesary header files are included.
	Installer (CTRE Toolsuite 5.0.0.1): Fixes issue where installation failed for VS 2017
	Installer (CTRE Toolsuite 5.0.0.1): Fixes issue where examples couldn't be installed for VS 2017
	Class Library (FRC C++ 2018_Alpha_v1): CanTalon and PigeonImu now utilize new CCI interface to low-level.
	Class Library (FRC Java 2018_Alpha_v1): CanTalon and PigeonImu now utilize new CCI interface to low-level.
	Class Library (FRC CCI 2018_Alpha_v2): Fixes Issues #1, 2, 3, 4, 6, 7, 8.
CTRE Toolsuite 5.0.0.0 Installer
	Installer (CTRE Toolsuite 5.0.0.0): Updated for use with Visual Studio 2017
	Class Library (FRC LabVIEW 2018_Alpha_v1): Changed VIs to use CCI rather than own implementation
	Class Library (FRC CCI 2018_Alpha_v1): C-style API for utilizing talon and pigeon
	Class Library (HERO Native 1.10.0.0): Added IOControl
	HERO Firmware (v1.0.0.0): Added IOControl
	Lifeboat (v0.9.8.0): RoboRIO update now moves CCI Shared Object to roboRIO
	NOTE: Lifeboat version same as previous version
CTRE Toolsuite 4.4.1.14 Installer
	Installer (CTRE Toolsuite 4.4.1.14): Fixed issue where files in wpilib/user weren't being removed on uninstall. (installer issue #1)
	Class Library (FRC C++ 2017_v7): Moved all header files to 'ctrlib' directory.  When using CANTalon or PigeonImu, you must now put 'ctrlib/' as a prefix to the header file in the include statement.
CTRE Toolsuite 4.4.1.13 Installer
	Class Library (FRC Java 2017_v6): Added API to access Talon SRX Data Port Output functionality.
	Class Library (FRC C++ 2017_v6): Added API to access Talon SRX Data Port Output functionality.
	Class Library (HERO SDK CTRE.dll 4.4.0.23): Added API to access Talon SRX Data Port Output functionality.
	NOTE: The Talon SRX Firmware supporting the above features is not packaged with this installer.
		It can be found in the CTRE Github repository with example projects for the data port output feature.
CTRE Toolsuite 4.4.1.12 Installer
	CTRE Toolsuite 4.4.1.12 Installer
	Talon SRX Firmware (2.34): Minor modification to start up frame.  This will allow for future features (such as ESD detection).  This will not impact any current use case of the Talon SRX.
	Talon SRX Firmware (2.33): Fixed issue where motion magic halts abruptly due to velocity-to-acceleration ratio exceeding threshold.
	Talon SRX Firmware (2.33): Changed Talon SRX current measurement to round instead of truncate.
	Talon SRX Firmware (2.31): Signal added to Status 8 for CAN driver status.
	Talon SRX Firmware (2.31): Robustness improvement in CAN buffering.  This was not necessary to resolve any issues, this was merely an improvement.
	Talon SRX Firmware (2.31): Various optimizations in the current-draw measurement.  This was not necessary to resolve any issues, this was merely an improvement.
	Talon SRX Firmware (2.31): Solved a possible divide-by-zero condition in the current-draw measurement.  This did not solve any known or reproducible issues.
	Talon SRX Firmware (2.30/10.30): Timing improvements added to correct the regression issues of the previous installer's Talon firmware (X.23).
	Talon SRX Firmware (2.30/10.30): The velocity measurement window will automatically truncate to the nearest supported value (1, 2, 4, 8, 16, 32, 64).
									 For example, if the robot controller attempts to set a window value of '50', the signal value will be truncated to '32'.
	Function Limitation: As a result of the performance improvements in the current-draw measurement, the current measurement for a given load may be dissimilar to the measurement when using previous firmware.  The difference should not exceed 0.125A, and only occurs near current-draws that are close to a multiple of 0.125A boundary.
	Class Library (FRC Java 2017_v5): Updated comment headers.
	Class Library (FRC C++ 2017_v5): Fixed bug where JNI library was not saving the last error code.
	Class Library (FRC C++ 2017_v5): Updated comment headers.
	Class Library (FRC LabVIEW 2017_v6): Updated Talon Context Help & VI Palette short names.
CTRE Toolsuite 4.4.1.11 Installer
	Talon SRX Firmware (2.23/10.23): Fixed issue that caused velocity measurement to wrap around at 32767 Native Units/100 ms.
	libfrccanfirmwareupdate.so: Fixed Text of Mode 7 to say Motion Magic
	libfrccanfirmwareupdate.so: Added Signals to Self-Test: Zero Position on Index, Forward Limit, and Reverse Limit.
	Class Library (FRC Java 2017_v4): Added Java/C++ API to get Motion Magic Active Trajectory Velocity/Position.
	Class Library (FRC C++ 2017_v4): Added Java/C++ API to get Motion Magic Active Trajectory Velocity/Position.
	Class Library (FRC LabVIEW 2017_v5): Added Java/C++ API to get Motion Magic Active Trajectory Velocity/Position.
	Class Library (FRC LabVIEW 2017_v5): Fixed issue where Motion Magic setpoint could not be negative and negative values were instead capped at 0.
	Function Limitation: (X.23): Talon firmware has a known regression issue where the velocity measurement may have a false oscillation that was not visible in earlier firmware.  This issue can be resolved by using older firmware (2.20 for example) or latest firmware (which has the issue resolved).
CTRE Toolsuite 4.4.1.10 Installer
	Talon SRX Firmware (2.22/10.22): Closed-Loop Nominal Battery Voltage setting added.
									 When set to nonzero, this represents what motor output 100% is scaled to when using closed-loop modes.  Otherwise closed-loop output will continue to scale to percent duty cycle.
	Talon SRX Firmware (2.22/10.22): Velocity Sampling now has two settings that can be tweaked: Sample Period and Rolling Average Window.
	libfrccanfirmwareupdate.so: Added Closed-Loop Nominal Battery Voltage and Velocity Sampling settings.
	libfrccanfirmwareupdate.so: Fixed issue where nominal/peak closed-loopoutput and voltage-compensation-mode ramp rate would default after changing any setting.
	LifeBoat (0.9.8.0):  Added Closed-Loop Nominal Battery Voltage and Velocity Sampling settings. 
	LifeBoat (0.9.8.0):  Combined DeviceID and Firmware into one tab.
	Class Library (HERO SDK CTRE.dll 4.4.0.18): Fixed GetSensorVelocity() so that speeds above (4800 X 4096 / SensorResolutionPerRotation) are decoded correctly.
	Class Library (HERO SDK CTRE.dll 4.4.0.18): Added getter/setters for velocity sampling settings and closed-loop nominal voltage.
	Class Library (FRC Java 2017_v3): Added getter/setters for velocity sampling settings and closed-loop nominal voltage.
	Class Library (FRC Java 2017_v3): Updated Usage Report for Pigeon IMU
	Class Library (FRC C++ 2017_v3): Added getter/setters for velocity sampling settings and closed-loop nominal voltage.
	Class Library (FRC C++ 2017_v3): Updated Usage Report for Pigeon IMU
	Class Library (FRC LabVIEW 2017_v2): Added getter/setters for velocity sampling settings and closed-loop nominal voltage.
	Class Library (FRC LabVIEW 2017_v2): Updated Usage Report for Pigeon IMU and Talon SRX
	Class Library (FRC LabVIEW 2017_v2): Added VI for Zeroing Sensor on Forward/Reverse Limits to Talon SRX palette.
	Function Limitation: (X.22): Talon firmware has a known regression issue where the velocity measurement overflows at (19660200/sensor-units-per-rotation) (RPM).
							This issue can be resolved by using older firmware (2.20 for example) or latest firmware (which has the issue resolved).
CTRE Toolsuite 4.4.1.9-nonadmin Installer
	Installer (CTRE Toolsuite 4.4.1.9-nonadmin): Fixed issue that caused Java/C++ Libraries to be placed in the admin account when installer is given access on a non-admin account.
	Installer (CTRE Toolsuite 4.4.1.9-nonadmin): Added Notice that users must re-start Eclipse if Java/C++ libraries have been installed.
	Installer (CTRE Toolsuite 4.4.1.9-nonadmin): Added option to view release notes after installer finishes.
CTRE Toolsuite 4.4.1.9 Installer
	Java and C++ Libraries are now built using the WPILib vendor template.
	Class Library (FRC C++ 2017_v2): Library file naming is now CTRLib instead of TalonSRXLib
	Class Library (FRC C++ 2017_v2): Now includes C++ Docs
	Class Library (FRC C++ 2017_v2): Usage reporting is more comprehensive
	Class Library (FRC Java 2017_v2): Library file naming is now CTRLib instead of TalonSRXLib
	Class Library (FRC Java 2017_v2): Now includes Javadocs
	Class Library (FRC Java 2017_v2): Usage reporting is more comprehensive
	Class Library (FRC Java 2017_v2): Automatic Error reporting has been fixed.
CTRE Toolsuite 4.4.1.8 Installer
	Class Library (FRC C++ 2017_v1): Minor changes to JNI wrappers to facilitate back-end error tracking
	Class Library (FRC Java 2017_v1): Error reporting now works.  It is not automatic;  GetLastError must be called.  Use with WPILib's DriverStation.SendError to send messages to the driver station.
	Class Library (FRC LabVIEW 2017_v1): Context help added to some Pigeon VIs.  More detailed versions to come in future releases.
	Class Library (FRC LabVIEW 2017_v1): Fixed Pigeon IMU VI's to not have conflicts when added to projects.
	Robot Builder: Fixed help file link for Talon SRX
CTRE Toolsuite 4.4.1.7 Installer
	Class Library (FRC C++ 2017_beta_v6): PigeonImu new function: GetAccumGyro
	Class Library (FRC C++ 2017_beta_v6): TalonSRX: new settings: ZeroSensorOnIdx, ZeroSensorOnForwardLimit, ZeroSensorOnReverseLimit
	Class Library (FRC Java 2017_beta_v5): PigeonImu new function: GetAccumGyro
	Class Library (FRC Java 2017_beta_v5): TalonSRX: new settings: ZeroSensorOnIdx, ZeroSensorOnForwardLimit, ZeroSensorOnReverseLimit
	Class Library (FRC LabVIEW 2017_beta_v7): PigeonIMU AccumGyro values available from GetStatus
	Class Library (HERO SDK CTRE.dll 4.4.0.17): PigeonImu new function: GetAccumGyro
	Class Library (HERO SDK CTRE.dll 4.4.0.17): New DisplayModule Class
CTRE Toolsuite 4.4.1.6 Installer
	HERO Firmware (hero_netmf_beta-0.11.2.0.crf): Increased NETMF HEAP from 102400 to 150000.
	HERO Firmware (hero_netmf_beta-0.11.2.0.crf): Added native pixel rastering.
	Pigeon Firmware (Pigeon-Application-0-18.crf): Added accumulated Gyro angles for X,Y,Z.
	Pigeon Firmware (Pigeon-Application-0-19.crf): Added a way to disable TempComp to measure its impact.  Also added a way to change statusframerates.
	libfrccanfirmwareupdate: Added Accum Gyro angles to self-test. (CTRE Build 11/23/2016)
	HERO LifeBoat: New image added for Pigeon - no changes to LifeBoat version.
	Class Library (FRC Java 2017_beta_v4): Pigeon IMU can now override status frame rate.
	Class Library (FRC Java 2017_beta_v4): Pigeon IMU AccumZ angle is now settable.
	Class Library (FRC Java 2017_beta_v4): Pigeon IMU Temperature Compensation can now be turned off.
	Class Library (FRC C++ 2017_beta_v5): See Pigeon IMU Java Updates.
	Class Library (FRC C++ 2017_beta_v5): CANTalon 'float' types changed to 'double' to match WPI CANSpeedController interface.
	Class Library (FRC LabVIEW 2017_beta_v6): Fixed issue causing dependency conflicts in LabVIEW projects.
	Class Library (FRC LabVIEW 2017_beta_v6): Added Motion Magic.
	Class Library (FRC LabVIEW 2017_beta_v6): Added Current Limiting.
	Class Library (HERO SDK CTRE.dll 4.4.0.16): PigeonImu API to match latest FRC Java/C++.
	Talon SRX Firmware (TalonSRX-Application-2.19): Added feature to clear sensor position on selected limit switch input.
	Talon SRX Firmware (TalonSRX-Application-2.19): Added first draft of robot-pose logic.
	Talon SRX Firmware (TalonSRX-Application-2.19): Added missing IO support for Pigeon.
	Talon SRX Firmware (TalonSRX-Application-2.20): Improved bootloader entry for Pigeon.
CTRE Toolsuite 4.4.1.5 Installer
	HERO USB Drivers: Drivers are now signed for 2017
	Class Library (HERO SDK CTRE.dll 4.4.0.15): Added Class for ESP12F WiFi Module
	Class Library (CTRE FRC Java 2017_beta_v3): Added Current Limit and Motion Magic APIs
	Class Library (CTRE FRC C++ 2017_beta_v4): Added Current Limit and Motion Magic APIs
CTRE Toolsuite 4.4.1.4 Installer
	Installer (CTRE Toolsuite 4.4.1.4): Added Robotbuilder CAN Talon object to installer.
	Class Library (FRC C++ 2017_beta_v3): Fixed issue where some Pigeon functions were not included in v2.
	Class Library (HERO SDK CTRE.dll 4.4.0.14): Fixed LowLevel PCM bug that prevented using slots 1-7.
CTRE Toolsuite 4.4.1.3 Installer
	Class Library (FRC Java 2017_beta_v2): Added PigeonIMU Library
	Class Library (FRC C++ 2017_beta_v2): Added PigeonIMU Library
	Class Library (FRC LabVIEW 2017_beta_v2): Fixed PigeonIMU Set VIs for Fused Heading and Yaw.
	Class Library (FRC LabVIEW 2017_beta_v2): Fixed Issue where Set Output for TalonSRX was double-inverting the output.
	LifeBoat (0.9.7.0) DLL(0.9.4.0): All binaries are now explicitly set to 32-bit.
	LifeBoat (0.9.7.0) DLL(0.9.4.0): New roboRIO web interface plugin to allow firmware flashing of PigeonIMU over TalonSRX uart connecton.
	LifeBoat (0.9.7.0) DLL(0.9.4.0): Fixed Regression Bug where HERO wasn't discovered.
	Talon SRX Firmware (TalonSRX-Application-2.18): 
			-only transmit status_11 if serial traffic is detected.
			-FRC build so tok is enabled.
			-Changes since last FRC build 2.0
			 * CAN Driver uses buffer0 instead of buffer3 for tx, this is a possible bug fix if dspic errata follows dspic33F
			 * various changes to arbID filters for iso15 and normal-mode framing
			 * BLDC vs BDC abstraction added
			 * Current limiting
			 * Throttle ramp is applied every 1ms instead of 10ms.
			 * Gadgeteer Client stack and Pigeon
			 * LED1 is disabled when vbat is > 20V to improve VbatMax.
			 * Back breaking changes to wear leveled rows for more params.
			 * Motion magic.
			 * CustomParams 0 and 1
			 * slight speed improvement (~3%) to flash write routines.
			 * Minor improvement to PWM vs CAN deducing logic.
			 * Talon SRX Uart uses 4X mode to achive higher bitrates.
			 * Slight optimization in Vbat averaging.
			 * Slight optimization in Vbat, Current, Analog ADC measurement.
			 * Pin 6 (SPI CS) internal pullup enabled on app boot.
			 * RAM savings optimization in current calibration math.
			 * New status frame Status_10 for motion magic.
			 * New status frame Status_11 for Gadgeteer Uart.
	Known Limitations
		-LifeBoat animation of Pigeon Cube is updated slowely.
		-LifeBoat animation of Pigeon Cube does not function if Pigeon is on CANbus and has a nonzero device ID.
		-Pigeon UART connection to Talon momentarily disconnects and reconnects after several minutes of use when using gadgeteer cable. 
		-Pigeon does not zero Fused Heading on boot.
		-Java error reporting has been temporarily disabled to prevent linking issues with the WPI Library.

CTRE Toolsuite 4.4.1.2 Installer
	Installer (CTRE Toolsuite v4.4.1.2.exe): Changed LabVIEW section checkbox to be non-selectable if LabVIEW 16.0 is not installed.
	VERSION_NOTES: New File that contains listing of library versions.
	Class Library (CTRE.dll 4.4.0.13): Added PigeonIMU.cs
	Class Library (FRC LabVIEW 2017_beta_v1): Added PigeonIMU Library.
	Class Library (FRC LabVIEW 2017_beta_v1): Fixed Unwired Terminal in WPI_CANTalonSRX_SendMotionProfile.vi.
	Class Library (FRC Java 2017_beta_v1): Compiled against 2017 WPI release to work with 2017 roboRIO images.
	Class Library (FRC C++ 2017_beta_v1): Compiled against 2017 WPI release to work with 2017 roboRIO images.
	HERO Firmware (hero_netmf_beta-0.10.1.0.crf): New Native Stub for setting the CAN bitrate.
	HERO Firmware (hero_netmf_beta-0.11.1.0.crf): Various changes to accomodate UART Gadgeteer Devices like Pigeon-IMU (when connected to Talon SRX).
	LifeBoat (0.9.6.0) DLL(0.9.4.0): Modified RIO detection to work on multiple PCs.
	LifeBoat (0.9.5.0) DLL(0.9.4.0): Added roboRIO Web based configuration updater.  This can be used to update a roboRIO with latest CTRE device support (such as Pigeon).
	LifeBoat (0.9.4.0) DLL(0.9.4.0): Duration is logged when reflashing a CAN Device.
	LifeBoat (0.9.4.0) DLL(0.9.4.0): Added support for Pigeon-IMU over CAN Bus.  Reflash takes approximately 10 seconds.
	LifeBoat (0.9.4.0) DLL(0.9.4.0): Added reflash for Pigeon-IMU ribbon-cabled to Talon SRX on CANBus.  Reflash takes approximately 40 seconds.  
	LifeBoat (0.9.4.0) DLL(0.9.4.0): Target framework elevated fromv 4.0 (Client) to v4.5.2
	Talon SRX Firmware (TalonSrx-Application-10.16-PigeonRebuild.crf): Various code cleanup and optimizations done in preperation for UART-Gadgeteer-Client stack.
	Talon SRX Firmware (TalonSrx-Application-10.16-PigeonRebuild.crf): UART-Gadgeteer-Client stack added to support UART peripherals such as Pigeon.
	Talon SRX Firmware (TalonSrx-Application-10.16-PigeonRebuild.crf): New firmware support for Pigeon.  Ribbon-cabled Pigeons will require this or Pigeon will not function over gadgeteer port.
	Talon SRX Firmware (TalonSrx-Application-10.17-RemovedDebugIoAddedRetry.crf): Robustness improvements to gadgeteer uart client stack.
	Pigeon Firmware (Pigeon-Application-0-7.crf): Initial release for Pigeon-IMU.
	Pigeon Firmware (Pigeon-Application-0-8.crf): Fixed bug where math error would reset Pigeon.
	Pigeon Firmware (Pigeon-Application-0-9.crf): Various improvements to several calibration routines.
	Pigeon Firmware (Pigeon-Application-0-9.crf): Fixed the CAN signals for quaternion frame.
	libfrccanfirmwareupdate: Plugin updated with Pigeon support, Self-Test now says CTRE Build to delineate between CTRE and NI built binaries.
	libfrccanfirmwareupdate: Rebuilt with latest FRC_NetworkComm to fix crash in 2017 image.

	Known Limitations
		-LifeBoat animation of Pigeon Cube is updated slowely.
		-LifeBoat animation of Pigeon Cube does not function if Pigeon is on CANbus and has a nonzero device ID.
		-Pigeon UART connection to Talon momentarily disconnects and reconnects after several minutes of use when using gadgeteer cable. 
		-Pigeon does not zero Fused Heading on boot.
		-roboRIO web-based config only supports CAN Pigeon.  Ribbon-cabled-to-Talon Pigeons are next.
		-LabVIEW Pigeon Set VIs are currently not functional.  This will be fixed in a future update.
		-Java error reporting has been temporarily disabled to prevent linking issues with the WPI Library.
		-LifeBoat limitation: Only one instance of LifeBoat may be open at once.  If more than one is opened, all instances will be non-functional.
CTRE Toolsuite 4.4.1.1 Installer
	Class Library (Cpp, Java, LabVIEW for FRC): Added libraries for the FRC programming languages.  These require the use of a roboRIO and FRC software packages.
HERO Beta SDK 4.4.1.0 Installer
	Installer (CTRE Toolsuite v4.4.1.0.exe): New Installer Technology.  Requires uninstallation of previous installers before installation.
	New "HERO Talon Custom Persistent Settings" added to Visual Studio.				
	Class Library (CTRE.dll 4.4.0.11): SetVoltageRampRate() will set ramp to minimal possible value if nonzero param is unreasonably small (instead of truncating to 0/no-ramp).
	Class Library (CTRE.dll 4.4.0.11): Current Limiting API added to Talon SRX.
HERO Beta SDK 4.4.0.25 Installer
	Class Library (CTRE.dll 4.4.0.10): Added PWMSpeedController.cs.  This class is used to drive PWM Motor Controllers.
	Class Library (CTRE.dll 4.4.0.10): Updated HERO.IO.cs so that Port 3 includes all 5 available PWM outputs.
	Class Library (CTRE.dll 4.4.0.10): Fixed bug in Watchdog class where IsEnabled returned the wrong value.
	Class Library (CTRE.dll 4.4.0.10): Changed SafeOutputPort to only attempt re-enabling output when Watchdog status is enabled.
	Class Library (ctre_netmf_native.dll 1.3.0.0): Addded back-end support for PWMSpeedController.
	HERO Firmware (hero_netmf_beta-0.10.0.1.crf): Bug fix for timer registers.
	HERO Firmware (hero_netmf_beta-0.10.0.1.crf):  Out-of-bounds read fix in HERO firmware (however no erroneous symptom was caused by it).
	HERO Firmware (hero_netmf_beta-0.10.0.1.crf): Fixed two PWM outputs that weren't functional and added and verified two more (bringing the total available number of PWM signal outputs to 5). (Added in 0.10.0.0)
	HERO Firmware (hero_netmf_beta-0.10.0.1.crf): Added PWM signals to Watchdog routines.   (Added in 0.10.0.0)
	Talon SRX Firmware (TalonSrx-Application-10.13-nonFRC-CustomParams.crf): Added new signals CustomParam0, CustomParam1, PersStorageIsSaving.
	Talon SRX Firmware (TalonSrx-Application-10.13-nonFRC-CustomParams.crf): Added Current Limit feature to Talon SRX. (Added in 10.12)
	Talon SRX Firmware (TalonSrx-Application-10.13-nonFRC-CustomParams.crf): Voltage Ramp is applied every 1ms instead of 10ms (ramp is more resolute now).  (Added in 10.12)
	Talon SRX Firmware (TalonSrx-Application-10.13-nonFRC-CustomParams.crf): Fixed bug where motion-magic acceleration and cruise velocity does not load from persistent storage on power boot.  (Added in 10.12)
HERO Beta SDK 4.4.0.24 Installer
	New "HERO Driver Module Example" added to Visual Studio.
	New "HERO Continuous Position Servo Example" added to Visual Studio.
	Class Library (CTRE.dll 4.4.0.9): Added Utilities.cs to hold general utility functions.
	Class Library (CTRE.dll 4.4.0.9): Added StatusCodes.cs to hold definitions of all status codes.
	Class Library (CTRE.dll 4.4.0.9): Updated CANBusDevice.cs to reference StatusCodes instead of literals.
	Class Library (CTRE.dll 4.4.0.9): Updated Reporting.cs to use StatusCodes and report unique error messages.
	Class Library (CTRE.dll 4.4.0.9): Updated HERO.IO.cs to have ports be a static implementation of a generic type class and port type interfaces.  This is to facilitate passing ports as an argument to the constructors of future gadgeteer module classes.
	Class Library (CTRE.dll 4.4.0.9): Added DriverModule.cs, which contains the DriverModule class.  This class supports the CTRE Gadgeteer Low-Side Driver Module.
	HERO Firmware (hero_netmf_beta-0.9.7.1.crf): Fixes an issue where analog pins 3, 4, and 5 were not declared in firmware.
HERO Beta SDK 4.4.0.23 Installer
	Rebuild for testing.
HERO Beta SDK 4.4.0.22 Installer
	Updated Analog Input and Serial example to use the HERO IO constants.
	USB Drivers uninstalled/reinstalled every time setup runs.
HERO Beta SDK 4.4.0.21 Installer
	Requirements: HERO must be updated to hero_netmf_beta-0.9.7.0.crf
	New "HERO Motion Magic Example" added to Visual Studio.
	LifeBoat (0.9.3.0) DLL(0.9.3.0): Added Clear NETMF button to just clear the deployed NETMF application.
	LifeBoat (0.9.3.0) DLL(0.9.3.0): Added Configuration Tab for changing Talon persistent settings.
	Class Library (CTRE.dll 4.4.0.8): Added HERO.IO.cs (merge commit from github)
	Class Library (CTRE.dll 4.4.0.8): Talon SRX Setters now have an optional timeout and error return, this allows developers to check if initialization routines were successful.
	Class Library (CTRE.dll 4.4.0.8): Talon SRX class has a setter for "Throttle Bump" which allows HERO to specify a throttle-offset to add to the closed-loop output, thus allowing cascaded PIDs (for gyro compensation for example).
	Class Library (CTRE.dll 4.4.0.8): Talon SRX supports MotionMagic control mode.  New setter for selecting acceleration and cruise velocity added.
	Class Library (CTRE.dll 4.4.0.8): Added a new class called SafeOutputPort that will automatically go high-z when HERO is disabled.  This is useful for automatically disabling relays when robot is disabled.
	Class Library (CTRE.dll 4.4.0.8): Added getter for the "low level object" in Talon SRX and PCM.  This is helpful for advanced users who intend to quickly extend the functionality beyond what the user-level class accomplishes.
	Class Library (CTRE.dll 4.4.0.8): GamepadValues has two vendor specific members.  This will populate with vendor specific signals, such as the MODE selection button on certain Logitech gamepads.
	Class Library (ctre_netmf_native.dll 1.2.0.9): Added back-end support for SafeOutputPort
	HERO Firmware (hero_netmf_beta-0.9.7.0.crf): USB Gamepad: Added support for USB device reports passed 10 bytes.  Necessary for decoding the MODE button on certain Logitech gamepads.
	HERO Firmware (hero_netmf_beta-0.9.7.0.crf): Various performance improvements for CAN periodic transmissions.  Retested on Robot Arm Demo.
	Talon SRX Firmware (TalonSrx-Application-10.11-nonFRC-MotionMagicAndNewPersis.crf): Added Motion Magic Control Mode.
	Talon SRX Firmware (TalonSrx-Application-10.11-nonFRC-MotionMagicAndNewPersis.crf): Persistent memory storage redesigned to fit future features.
	Talons with firmware less than 10.10 will have its persistent settings defaulted when updating up to 10.11 or greater.  However brake and limit-switch settings are not affected.

HERO Beta SDK 4.4.0.20 Installer
	Added HERO Serial Example project and HERO Position Closed-looping Example.
	hero_netmf_beta-0.9.4.0.crf (firmware): Added UART support.
	CTRE.dll 4.4.0.6: Added second parameter to TalonSrx contructor called externalEnable to allow one robot-controller to motor-enable a Talon, and another robot-controller to control/update the Talon.
		This can be useful when using one robot-controller to safely enable/disable your robot, while other HEROs are used to control the behavior of CAN actuators when robot is enabled.
	ctre_netmf_native.dll 1.2.0.8: Changed copyright to 2016.

HERO Beta SDK 4.4.0.19 Installer
	CTRE.dll 4.4.0.5: Added PCM user-facing class.
	CTRE.dll 4.4.0.5: Getter for detecting if USB gamepad is present.

HERO Beta SDK 4.4.0.18 Installer
	LifeBoat (0.9.2.3) DLL(0.9.2.0): Easter Egg added for testing purposes.

HERO Beta SDK 4.4.0.17 Installer
	hero_netmf_beta-0.9.2.3.crf (firmware): HDU MSC turned off.
	hero_netmf_beta-0.9.2.3.crf (firmware): CAN driver message abort times adjusted.
	hero_netmf_beta-0.9.2.0.crf (firmware): Replaced the red-black tree with sorted handwritten arrayList. rbtree seemed to be losing its sort order.  New module is called linkedlist.cpp, though by the time I was done it become array based (not a linked list).
	hero_netmf_beta-0.9.2.0.crf (firmware): Fixed issue where LifeBoat loses communication with HERO after a few minutes of use.
	hero_netmf_beta-0.9.2.0.crf (firmware): Decreased the full threshold for CAN IsFull tx, from 1 to 2.  This is a workaround to an intermittent dropped tx can frame.
	hero_netmf_beta-0.9.2.0.crf (firmware): Hero catches iso15 tx requests for devID changes, and synchronously updates the data objects that stores poll results.
	hero_netmf_beta-0.9.2.0.crf (firmware): If firmware can't keep up with eth frames over rndis, entire frame gets dropped.  Before there was a chance that data and datalen wasn't updated atomically causes corrupted data to be processed.
	hero_netmf_beta-0.9.2.0.crf (firmware): Lots of changes to cleanly remove CAN devices in device list after they are physically removed from the canbus.
	hero_netmf_beta-0.9.2.0.crf (firmware): Justice Client modified to only decode datagrams.  As it stands the frame decoded is too fragile for datastreams.
	hero_direct_drive-0.0.3.0.crf (firmware): Picked up all of fixes above since last build.
	LifeBoat (0.9.2.1) DLL(0.9.2.0): Various GUI fixes and improvements.
	LifeBoat (0.9.2.1) DLL(0.9.2.0): Runtime detection of a known issue where Windows 10 erroneously enumerates WINUSB devices as a USB Serial Device.  LifeBoat will instruct how to apply the workaround.
HERO Beta SDK 4.4.0.15 Installer
	hero_netmf_beta-0.9.1.1.crf (firmware): Fixed issue where more than 10 CTRE devices would cause HERO to reset.

HERO Beta SDK 4.4.0.14 Installer
	hero_netmf_beta-0.9.1.0.crf (firmware): Fixed issue where single Talon stays blinking red if HERO and one single Talon are on CANBus.
	hero_netmf_beta-0.9.1.0.crf (firmware): Fixed issue where HERO would reset after so-many HDU USB disconnect/reconnents.
	hero_direct_drive-0.0.2.0.crf (firmware): Rebuilt to pick up HDU USB fixes.

HERO Beta SDK 4.4.0.13 Installer
	hero_netmf-1.3.2.0.crf (firmware): netmf RAM increased to 100KB.
	hero_simple_drive-0.0.1.0.crf (firmware): Drives all Talons with HID Gamepad.  This is useful for simply driving Talons on a CANBus with a HERO and Gamepad.  
		This firmware requires no Visual Studio or coding whatsoever.  HERO LifeBoat can still be used to discover and config CAN devices.
	HERO Beta SDK 4.4.0.13: Updated example projects to use latest CTRE.TalonSRX class.
	HERO Beta SDK 4.4.0.13: New example added for Talon SRX Motion Profile control mode.